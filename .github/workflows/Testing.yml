name: Testing
permissions:
  contents: read

on:
  push:
    paths:
      - 'src/**'
      - 'CMakeLists.txt'
  pull_request:
    branches:
      - master
      - main

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Cache build dependencies
      uses: actions/cache@v3
      with:
        path: build/
        key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-build

    - name: Set up CMake
      uses: lukka/get-cmake@latest

    - name: Install Dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install -y --no-install-recommends build-essential git make pkg-config cmake ninja-build gnome-desktop-testing libasound2-dev libpulse-dev libaudio-dev libjack-dev libsndio-dev libx11-dev libxext-dev libxrandr-dev libxcursor-dev libxfixes-dev libxi-dev libxss-dev libxkbcommon-dev libdrm-dev libgbm-dev libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev libdbus-1-dev libibus-1.0-dev libudev-dev fcitx-libs-dev 

    - name: Configure CMake (Non-Ubuntu)
      if: matrix.os != 'ubuntu-latest'
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
    
    - name: Configure CMake (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DSDL_UNIX_CONSOLE_BUILD=ON -DTESTING=ON

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j 8

    - name: Test
      if: matrix.os == 'ubuntu-latest'
      run: cd build && ctest
